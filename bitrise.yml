format_version: '8'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios
app:
  envs:
    - BITRISE_PROJECT_NAME: uk.ac.ceh.irecord
      opts:
        is_expand: false
    - BITRISE_PROJECT_PATH: ios/App/App.xcworkspace
      opts:
        is_expand: false
    - BITRISE_SCHEME: App
      opts:
        is_expand: false
    - BITRISE_EXPORT_METHOD: app-store
      opts:
        is_expand: false
trigger_map:
  - push_branch: '*'
    workflow: ci
workflows:
  android:
    steps:
      - set-java-version@1:
          run_if: .IsCI
          inputs:
            - set_java_version: '21'
      - change-android-versioncode-and-versionname@1:
          inputs:
            - build_gradle_path: $BITRISE_SOURCE_DIR/android/app/build.gradle
            - version_code_offset: '700000000'
            - new_version_name: $NPM_PACKAGE_VERSION
      - android-build@1:
          inputs:
            - module: app
            - variant: release\ndebug
            - build_type: aab
            - project_location: $BITRISE_SOURCE_DIR/android
      - sign-apk@1:
          inputs:
            - debuggable_permitted: 'false'
            - verbose_log: 'true'
            - android_app: $BITRISE_AAB_PATH
  ci:
    before_run:
      - web
      - android
      - ios
    after_run:
      - deploy
  deploy:
    steps:
      - npm@1:
          title: Deploy to demo site
          run_if: enveq "BUILD_ONLY" ""
          inputs:
            - command: run deploy
      - google-play-deploy@3:
          run_if: enveq "BUILD_ONLY" ""
          inputs:
            - package_name: $BITRISE_PROJECT_NAME
            - service_account_json_key_path: $BITRISEIO_GOOGLE_SERVICE_KEY_URL
      - deploy-to-itunesconnect-application-loader@1:
          run_if: enveq "BUILD_ONLY" ""
          inputs:
            - password: $ITUNES_CONNECT_PASS
            - app_password: $ITUNES_CONNECT_APP_PASS
            - itunescon_user: $ITUNES_CONNECT_USER
      - script@1:
          title: Upload Builds to OneDrive
          inputs:
            - content: |
                DIRECTORY="$BITRISE_PROJECT_NAME/$NPM_PACKAGE_VERSION"
                npx @flumens/onedrive-upload --directory $DIRECTORY --file $BITRISE_DEPLOY_DIR/app-debug.aab
      - script@1:
          title: Upload Builds to OneDrive
          inputs:
            - content: |
                DIRECTORY="$BITRISE_PROJECT_NAME/$NPM_PACKAGE_VERSION"
                npx @flumens/onedrive-upload --directory $DIRECTORY --file $BITRISE_DEPLOY_DIR/App.ipa
      - script@1:
          title: Git Tag
          run_if: enveq "BUILD_ONLY" ""
          inputs:
            - content: |
                TAG_NAME="v$NPM_PACKAGE_VERSION-$BITRISE_BUILD_NUMBER"
                git tag -a "$TAG_NAME" -m "* Demo link: $DEMO_URL" -m "* Build link: $BITRISE_BUILD_URL" "$BITRISE_GIT_COMMIT"
                git push origin "$TAG_NAME"
  ios:
    steps:
      - certificate-and-profile-installer@1: {}
      - set-ios-version@2:
          run_if: 'true'
          inputs:
            - bundle_version: $BITRISE_BUILD_NUMBER
            - bundle_version_short: $NPM_PACKAGE_VERSION
            - info_plist_file: ios/App/App/Info.plist
      - xcode-archive@5:
          inputs:
            - distribution_method: app-store
            - automatic_code_signing: api-key
  web:
    steps:
      - nvm@1: {}
      - script@1:
          title: Print system info
          inputs:
            - content: |
                #!/usr/bin/env bash
                echo "Node version:"
                node --version
                npm --version
                xcodebuild -version
                sw_vers
                uname -av
      - get-npm-package-version@1: {}
      - npm@1:
          title: Install
          timeout: 360
          inputs:
            - command: install
      - npm@1:
          title: Test
          inputs:
            - command: run test
      - npm@1:
          title: Test Eslint
          inputs:
            - command: run test:eslint
      - npm@1:
          title: Build
          inputs:
            - command: run build:production
